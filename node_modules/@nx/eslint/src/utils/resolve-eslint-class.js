"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveESLintClass = void 0;
async function resolveESLintClass(useFlatConfig = false) {
    try {
        // In eslint 8.57.0 (the final v8 version), a dedicated API was added for resolving the correct ESLint class.
        const eslint = await Promise.resolve().then(() => require('eslint'));
        if (typeof eslint.loadESLint === 'function') {
            return await eslint.loadESLint({ useFlatConfig });
        }
        // If that API is not available (an older version of v8), we need to use the old way of resolving the ESLint class.
        if (!useFlatConfig) {
            return eslint.ESLint;
        }
        // eslint-disable-next-line @typescript-eslint/no-var-requires
        const { FlatESLint } = require('eslint/use-at-your-own-risk');
        return FlatESLint;
    }
    catch {
        throw new Error('Unable to find ESLint. Ensure ESLint is installed.');
    }
}
exports.resolveESLintClass = resolveESLintClass;
