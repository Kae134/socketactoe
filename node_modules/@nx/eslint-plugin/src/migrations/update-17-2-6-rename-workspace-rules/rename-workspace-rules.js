"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const devkit_1 = require("@nx/devkit");
const binary_extensions_1 = require("@nx/devkit/src/utils/binary-extensions");
const constants_1 = require("../../constants");
async function renameWorkspaceRule(tree) {
    if (!tree.exists(constants_1.WORKSPACE_RULES_PATH)) {
        return;
    }
    let ruleNames = [];
    try {
        ruleNames = Object.keys(require(constants_1.WORKSPACE_PLUGIN_DIR).rules);
    }
    catch (e) {
        return;
    }
    (0, devkit_1.visitNotIgnoredFiles)(tree, '.', (path) => {
        if ((0, binary_extensions_1.isBinaryPath)(path)) {
            return;
        }
        let contents = tree.read(path, 'utf-8');
        ruleNames.forEach((ruleName) => {
            contents = contents.replace(new RegExp(`@nx/workspace/${ruleName}`, 'g'), `@nx/workspace-${ruleName}`);
        });
        tree.write(path, contents);
    });
    await (0, devkit_1.formatFiles)(tree);
}
exports.default = renameWorkspaceRule;
