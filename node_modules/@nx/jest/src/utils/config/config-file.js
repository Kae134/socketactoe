"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.findRootJestPreset = exports.findRootJestConfig = exports.getPresetExt = exports.jestPresetExtensions = exports.jestConfigExtensions = void 0;
const devkit_1 = require("@nx/devkit");
exports.jestConfigExtensions = [
    'js',
    'ts',
    'mjs',
    'cjs',
    'mts',
    'cts',
];
exports.jestPresetExtensions = ['js', 'cjs', 'mjs'];
function getPresetExt(tree) {
    const ext = exports.jestPresetExtensions.find((ext) => tree.exists(`jest.preset.${ext}`));
    if (ext) {
        return ext;
    }
    const rootPkgJson = (0, devkit_1.readJson)(tree, 'package.json');
    if (rootPkgJson.type && rootPkgJson.type === 'module') {
        // use cjs if package.json type is module
        return 'cjs';
    }
    // default to js
    return 'js';
}
exports.getPresetExt = getPresetExt;
function findRootJestConfig(tree) {
    const ext = exports.jestConfigExtensions.find((ext) => tree.exists(`jest.config.${ext}`));
    return ext ? `jest.config.${ext}` : null;
}
exports.findRootJestConfig = findRootJestConfig;
function findRootJestPreset(tree) {
    const ext = exports.jestPresetExtensions.find((ext) => tree.exists(`jest.preset.${ext}`));
    return ext ? `jest.preset.${ext}` : null;
}
exports.findRootJestPreset = findRootJestPreset;
